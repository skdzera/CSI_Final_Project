{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "csiadfsk"
        },
        "csiadlslinked1_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'csiadlslinked1'"
        },
        "SqlServer2_password": {
            "type": "secureString",
            "metadata": "Secure string for 'password' of 'SqlServer2'"
        },
        "AzureSqlDatabase1_password": {
            "type": "secureString",
            "metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
        },
        "csiadlslinked1_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://strgsk.dfs.core.windows.net/"
        },
        "integrationRuntime2_properties_typeProperties_linkedInfo_resourceId": {
            "type": "string",
            "defaultValue": "/subscriptions/3df2ff29-09fa-4393-b872-1121e7b6a3ce/resourcegroups/csi_sk/providers/Microsoft.DataFactory/factories/skadf096/integrationruntimes/IR-CSI6"
        },
        "SqlServer2_properties_typeProperties_server": {
            "type": "string",
            "defaultValue": "SKDZERA\\SQLEXPRESS"
        },
        "SqlServer2_properties_typeProperties_database": {
            "type": "string",
            "defaultValue": "sakshamdb"
        },
        "SqlServer2_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "SKDZERA\\Saksham"
        },
        "AzureSqlDatabase1_properties_typeProperties_server": {
            "type": "string",
            "defaultValue": "csiproject.database.windows.net"
        },
        "AzureSqlDatabase1_properties_typeProperties_database": {
            "type": "string",
            "defaultValue": "ssdb"
        },
        "AzureSqlDatabase1_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "skdzera"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/csiadlslinked1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('csiadlslinked1_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('csiadlslinked1_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "SelfHosted",
                "typeProperties": {
                    "linkedInfo": {
                        "resourceId": "[parameters('integrationRuntime2_properties_typeProperties_linkedInfo_resourceId')]",
                        "authorizationType": "Rbac"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/default')]",
            "type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
            "apiVersion": "2018-06-01",
            "properties": {},
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CustomerJsonsink')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "csiadlslinked1",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "folderpath": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().filename",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().folderpath",
                            "type": "Expression"
                        },
                        "fileSystem": "csiadlsproject"
                    }
                },
                "schema": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/csiadlslinked1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_thresholdCSV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "csiadlslinked1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "threshold.csv",
                        "folderPath": "threshold",
                        "fileSystem": "csiadlsproject"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "threshold",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/csiadlslinked1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/customeradresscsv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "csiadlslinked1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "Customer_address.csv",
                        "folderPath": "customeradresscsv",
                        "fileSystem": "csiadlsproject"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "CustomerID",
                        "type": "String"
                    },
                    {
                        "name": "Street",
                        "type": "String"
                    },
                    {
                        "name": "City",
                        "type": "String"
                    },
                    {
                        "name": "State",
                        "type": "String"
                    },
                    {
                        "name": "Zipcode",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/csiadlslinked1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sink_json')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "csiadlslinked1",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "foldername": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().filename",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().foldername",
                            "type": "Expression"
                        },
                        "fileSystem": "csiadlsproject"
                    }
                },
                "schema": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/csiadlslinked1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sink_paraquet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "csiadlslinked1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "joined_customer_data.parquet",
                            "type": "Expression"
                        },
                        "folderPath": "paraquet_output",
                        "fileSystem": "csiadlsproject"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/csiadlslinked1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServer2')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "server": "[parameters('SqlServer2_properties_typeProperties_server')]",
                    "database": "[parameters('SqlServer2_properties_typeProperties_database')]",
                    "encrypt": "optional",
                    "trustServerCertificate": false,
                    "authenticationType": "Windows",
                    "userName": "[parameters('SqlServer2_properties_typeProperties_userName')]",
                    "password": {
                        "type": "SecureString",
                        "value": "[parameters('SqlServer2_password')]"
                    }
                },
                "connectVia": {
                    "referenceName": "integrationRuntime2",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/azureruntime')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "East US",
                        "dataFlowProperties": {
                            "computeType": "General",
                            "coreCount": 8,
                            "timeToLive": 10,
                            "cleanup": false,
                            "customProperties": []
                        },
                        "pipelineExternalComputeScaleProperties": {
                            "timeToLive": 60,
                            "numberOfPipelineNodes": 1,
                            "numberOfExternalNodes": 1
                        }
                    }
                },
                "managedVirtualNetwork": {
                    "type": "ManagedVirtualNetworkReference",
                    "referenceName": "default"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Customers')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "CustomerID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FirstName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "LastName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Email",
                        "type": "nvarchar"
                    },
                    {
                        "name": "City",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CreatedDate",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Customer"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_sql_dynamic')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer2",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "query": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Customer"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
                    "database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
                    "encrypt": "mandatory",
                    "trustServerCertificate": false,
                    "authenticationType": "SQL",
                    "userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
                    "password": {
                        "type": "SecureString",
                        "value": "[parameters('AzureSqlDatabase1_password')]"
                    }
                },
                "connectVia": {
                    "referenceName": "azureruntime",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/azureruntime')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Foreach_Example2')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Set variable1",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "TablesToCopy",
                            "value": [
                                {
                                    "query": "SELECT * FROM Product WHERE ProductID > 100",
                                    "foldername": "Product",
                                    "filename": "product.json"
                                },
                                {
                                    "query": "SELECT * FROM Customer WHERE CustomerID > 100 AND CustomerID < 1000",
                                    "foldername": "Customer",
                                    "filename": "customer.json"
                                }
                            ]
                        }
                    },
                    {
                        "name": "ForEach1",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Set variable1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('TablesToCopy') ",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy data2",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings",
                                                "copyBehavior": "MergeFiles"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_sql_dynamic",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "query": {
                                                    "value": "@item().query",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_sink_json",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "foldername": "@item().foldername",
                                                "filename": "@item().filename"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "TablesToCopy": {
                        "type": "Array"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2025-07-10T18:11:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_sql_dynamic')]",
                "[concat(variables('factoryId'), '/datasets/ds_sink_json')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/csiprojectpipline1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LookupThreshold",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_thresholdCSV",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "GetCustomerCount",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "LookupThreshold",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": "SELECT COUNT(*) AS customerCount FROM Customer\n",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "Customers",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "If Condition1",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "GetCustomerCount",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(\n  int(activity('GetCustomerCount').output.firstRow.customerCount),\n  int(activity('LookupThreshold').output.firstRow.threshold)\n)\n",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Copy data1",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SqlServerSource",
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings",
                                                "copyBehavior": "FlattenHierarchy"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Customers",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "CustomerJsonsink",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "folderpath": "Customer/@{formatDateTime(utcnow(), 'yyyy')}/@{formatDateTime(utcnow(), 'MM')}/@{formatDateTime(utcnow(), 'dd')}",
                                                "filename": "customer_@{formatDateTime(utcnow(), 'HHmmss')}.json"
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2025-07-10T12:56:55Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_thresholdCSV')]",
                "[concat(variables('factoryId'), '/datasets/Customers')]",
                "[concat(variables('factoryId'), '/datasets/CustomerJsonsink')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/customer_join_azure')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "CustomerID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FirstName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "LastName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Email",
                        "type": "nvarchar"
                    },
                    {
                        "name": "City",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CreatedDate",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Customer"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Dataflow_t4')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "customer_join_azure",
                                "type": "DatasetReference"
                            },
                            "name": "source1"
                        },
                        {
                            "dataset": {
                                "referenceName": "customeradresscsv",
                                "type": "DatasetReference"
                            },
                            "name": "source2"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_sink_paraquet",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "join1"
                        },
                        {
                            "name": "filter1",
                            "description": "Add expression for the filter"
                        },
                        {
                            "name": "sort1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          CustomerID as integer,",
                        "          FirstName as string,",
                        "          LastName as string,",
                        "          Email as string,",
                        "          City as string,",
                        "          CreatedDate as timestamp",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     isolationLevel: 'READ_UNCOMMITTED',",
                        "     format: 'table') ~> source1",
                        "source(output(",
                        "          CustomerID as string,",
                        "          Street as string,",
                        "          City as string,",
                        "          State as string,",
                        "          Zipcode as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> source2",
                        "source1, source2 join(source1@CustomerID == toInteger(source2@CustomerID),",
                        "     joinType:'inner',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> join1",
                        "join1 filter(source1@CustomerID > 1000 && source1@CustomerID < 2000) ~> filter1",
                        "filter1 sort(asc(source1@CustomerID, true)) ~> sort1",
                        "sort1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> sink1"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/customer_join_azure')]",
                "[concat(variables('factoryId'), '/datasets/customeradresscsv')]",
                "[concat(variables('factoryId'), '/datasets/ds_sink_paraquet')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/customerjoin')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data flow1",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "Dataflow_t4",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "source1": {},
                                    "source2": {},
                                    "sink1": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2025-07-13T10:53:15Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/Dataflow_t4')]"
            ]
        }
    ]
}